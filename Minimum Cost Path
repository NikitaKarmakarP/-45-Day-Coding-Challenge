def minCostPath(cost, n, m, x, y):
    dp=[[-1]*m for _ in range(n)]

    def solve(i,j):
        if i==0 and j==0:
            return cost[0][0]
        if  i<0 or j<0 or i>=n or j>=m:
            return float("inf")

        if dp[i][j]!=-1:
            return dp[i][j]

        dp[i][j]=cost[i][j]+min(solve(i-1,j),solve(i,j-1),solve(i-1,j-1))
        return dp[i][j]


    newn=x-1
    newm=y-1
    return solve(newn,newm)
