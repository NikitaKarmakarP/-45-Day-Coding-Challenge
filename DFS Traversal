#include<bits/stdc++.h>

using namespace std;

void dfs(vector<int> adj[], vector<int> &visited, vector<int> &ans,int Node) {

  visited[Node] = 1;

  ans.push_back(Node);

  for (auto it : adj[Node]) {

    if (!visited[it])

      dfs(adj, visited, ans, it);

  }

}

 

vector<vector<int>> depthFirstSearch(int V, int E, vector<vector<int>> &edges) {

  vector<int> visited(V, 0);

  vector<vector<int>> ans;

  vector<int> adj[V];

  for(int i=0;i<edges.size();i++){

      int u=edges[i][0];

      int v=edges[i][1];

      adj[u].push_back(v);

      adj[v].push_back(u);

  }

  for (int i = 0; i < V; i++) {

    if (!visited[i]) {

    vector<int> temp;

      dfs(adj, visited, temp, i);

        ans.push_back(temp);

    }

  }

  return ans;

}

